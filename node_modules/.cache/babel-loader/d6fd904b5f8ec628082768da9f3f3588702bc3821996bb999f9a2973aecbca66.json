{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aanya\\\\OneDrive\\\\Desktop\\\\REACT\\\\ten_combined\\\\src\\\\QuizApp\\\\QuizApp.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\n// import './App.css';\n// import { useState } from 'react';\n\n// function App() {\n//   // It is all JSX not HTML\n//   const [add,setAdd] = useState(55)\n//   const [subs,setSub] = useState(55)\n//   const handleAdd = () =>{\n//     setAdd(add+1)\n//   }\n//   const handleSubs =()=>{\n//     setSub(subs-1)\n//   }\n//   return (\n//     <div className=\"App\">\n//       <h1 style={ {color:'red', fontFamily:\"cursive\", } }>Fallen Leaves</h1>   \n//       <h2>Add has state {add}</h2>\n//       <button onClick={handleAdd}>+</button>\n//       <h2>Substract has state {subs}</h2> \n//       <button onClick={handleSubs}>-</button>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n//rfc\n//rfce\nimport React, { useState } from 'react';\nimport 'QuizApp.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const questions = [{\n    questionText: 'What is the capital of France?',\n    answerOptions: [{\n      answerText: 'New York',\n      isCorrect: false\n    }, {\n      answerText: 'London',\n      isCorrect: false\n    }, {\n      answerText: 'Paris',\n      isCorrect: true\n    }, {\n      answerText: 'Dublin',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'Who is CEO of Tesla?',\n    answerOptions: [{\n      answerText: 'Jeff Bezos',\n      isCorrect: false\n    }, {\n      answerText: 'Elon Musk',\n      isCorrect: true\n    }, {\n      answerText: 'Bill Gates',\n      isCorrect: false\n    }, {\n      answerText: 'Tony Stark',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'The iPhone was created by which company?',\n    answerOptions: [{\n      answerText: 'Apple',\n      isCorrect: true\n    }, {\n      answerText: 'Intel',\n      isCorrect: false\n    }, {\n      answerText: 'Amazon',\n      isCorrect: false\n    }, {\n      answerText: 'Microsoft',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'How many Harry Potter books are there?',\n    answerOptions: [{\n      answerText: '1',\n      isCorrect: false\n    }, {\n      answerText: '4',\n      isCorrect: false\n    }, {\n      answerText: '6',\n      isCorrect: false\n    }, {\n      answerText: '7',\n      isCorrect: true\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showscore, setshowscore] = useState(false);\n  const [score, setscore] = useState(0);\n  let handleQues = para => {\n    console.log(para);\n    if (para == true) {\n      setscore(score + 1);\n    }\n    let nextQ = currentQuestion + 1;\n    if (nextQ < questions.length) {\n      setCurrentQuestion(nextQ);\n    } else {\n      alert('Quiz Over');\n      setshowscore(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showscore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [\"You scored \", score, \" out of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Question \", currentQuestion + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 10\n          }, this), \"/\", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: questions[currentQuestion].questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: questions[currentQuestion].answerOptions.map((ele, index) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleQues(ele.isCorrect),\n            children: ele.answerText\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ALloDuni4j8d8dGqo61YK5lb+DM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showscore","setshowscore","score","setscore","handleQues","para","console","log","nextQ","length","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","ele","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aanya/OneDrive/Desktop/REACT/ten_combined/src/QuizApp/QuizApp.js"],"sourcesContent":["// import logo from './logo.svg';\n// import './App.css';\n// import { useState } from 'react';\n\n// function App() {\n//   // It is all JSX not HTML\n//   const [add,setAdd] = useState(55)\n//   const [subs,setSub] = useState(55)\n//   const handleAdd = () =>{\n//     setAdd(add+1)\n//   }\n//   const handleSubs =()=>{\n//     setSub(subs-1)\n//   }\n//   return (\n//     <div className=\"App\">\n//       <h1 style={ {color:'red', fontFamily:\"cursive\", } }>Fallen Leaves</h1>   \n//       <h2>Add has state {add}</h2>\n//       <button onClick={handleAdd}>+</button>\n//       <h2>Substract has state {subs}</h2> \n//       <button onClick={handleSubs}>-</button>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n//rfc\n//rfce\nimport React, { useState } from 'react'\nimport 'QuizApp.jsx'\nfunction App() {\n\n  const questions = [  {\n    questionText: 'What is the capital of France?',   answerOptions: [\n     { answerText: 'New York', isCorrect: false },    { answerText: 'London', isCorrect: false },\n     { answerText: 'Paris', isCorrect: true },    { answerText: 'Dublin', isCorrect: false },\n    ],  },\n   {   questionText: 'Who is CEO of Tesla?',\n    answerOptions: [    { answerText: 'Jeff Bezos', isCorrect: false },\n     { answerText: 'Elon Musk', isCorrect: true },    { answerText: 'Bill Gates', isCorrect: false },\n     { answerText: 'Tony Stark', isCorrect: false },   ],\n   },  {\n    questionText: 'The iPhone was created by which company?',   answerOptions: [\n     { answerText: 'Apple', isCorrect: true },    { answerText: 'Intel', isCorrect: false },\n     { answerText: 'Amazon', isCorrect: false },    { answerText: 'Microsoft', isCorrect: false },\n    ],  },\n   {   questionText: 'How many Harry Potter books are there?',\n    answerOptions: [    { answerText: '1', isCorrect: false },\n     { answerText: '4', isCorrect: false },    { answerText: '6', isCorrect: false },\n     { answerText: '7', isCorrect: true },   ],\n   },\n  ];\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n \n  const [showscore, setshowscore] = useState(false)\n \n  const [score, setscore] = useState (0)\n  let handleQues = (para)=>{\n    console.log(para)\n    if(para==true)\n    {\n      setscore(score+1)\n    }\n    let nextQ = currentQuestion + 1\n    if(nextQ < questions.length ){\n      setCurrentQuestion(nextQ)\n    }\n    else\n    {\n      \n      alert('Quiz Over')\n      setshowscore(true)\n     \n    }\n  }\n\n  return ( \n    <div className='app'> \n     {/* HINT: replace \"false\" with logic to display the  \n        score when the user has answered all the questions */} \n     {showscore ? ( \n      <div className='score-section'>You scored {score} out of {questions.length}</div> \n     ) : ( \n      <> \n       <div className='question-section'> \n        <div className='question-count'> \n         <span>Question {currentQuestion+1}</span>/{questions.length} \n        </div> \n        <div className='question-text'>{questions[currentQuestion].questionText}</div> \n       </div> \n       <div className='answer-section'>\n        {\n        questions[currentQuestion].answerOptions.map((ele,index)=>{\n          return <button key={index} onClick={()=>handleQues(ele.isCorrect)}>{ele.answerText}</button>\n       })\n      }\n       </div> \n      </>\n     )} \n    </div> \n   ); \n  }\n\nexport default App\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}